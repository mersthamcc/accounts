name: Deploy on PR merge
on:
  push:
    branches:
      - main
jobs:
  deploy-live-environment:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Get Terraform version
        id: getterraformversion
        run: echo "::set-output name=version::$(cat terraform/.terraform-version)"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ steps.getterraformversion.outputs.version }}
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOYER_ROLE }}
          role-session-name: github-actions-merge-deploy-${{ github.run_id }}-${{ github.run_number }}
          aws-region: eu-west-2

      - name: Create Terraform variables
        working-directory: terraform/bootstrap
        run: |
          cat <<EOF > credentials.auto.tfvars
          aws_region="${{ env.AWS_REGION }}"
          aws_access_key_id="${{ env.AWS_ACCESS_KEY_ID }}"
          aws_secret_access_key="${{ env.AWS_SECRET_ACCESS_KEY }}"
          aws_session_token="${{ env.AWS_SESSION_TOKEN }}"
          EOF
          
          cp credentials.auto.tfvars ../environment/

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew clean build sonarqube --info -x test

      - name: Build Zip
        run: ./gradlew buildZip

      - name: Copy live ZIP to S3
        run: |
          aws s3 cp build/distributions/accounts.zip s3://mcc-accounts-deployment/live-accounts.zip

      - name: Deploy bootstrap Terraform
        working-directory: terraform/bootstrap
        run: |
          terraform init -input=false

          terraform apply -auto-approve

      - name: Deploy live build to AWS
        working-directory: terraform/environment
        env:
          TF_TOKEN: ${{ secrets.TF_TOKEN }}
        run: |
          mv test-mappings.auto.tfvars test-mappings.tfvars
          mv live-mappings.tfvars live-mappings.auto.tfvars
          terraform init -input=false \
            -backend-config=live-backend.hcl

          terraform apply -auto-approve
