plugins {
    id "java"
    id "jacoco"
    id "org.sonarqube" version "3.2.0"
    id "org.hidetake.swagger.generator" version "2.18.2"
    id "com.diffplug.spotless" version "5.14.0"
}

group = "cricket.merstham.website.accounts"
version = "unspecified"

sonarqube {
    properties {
        property "sonar.projectKey", "mersthamcc_accounts"
        property "sonar.organization", "mersthamcc"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

spotless {
    java {
        target '**/*.java'
        googleJavaFormat('1.9').aosp()
        importOrder '', 'javax', 'java', '\\#'
    }

    groovyGradle {
        target '**/*.gradle'
        greclipse().configFile('spotless-gradle.properties')
    }
}

repositories {
    mavenCentral()
    jcenter()
}

def dependencyVersions = [
    swagger_annotations_version: "1.5.17",
    jackson_version: "2.8.9",
    jersey_version: "2.34",
    junit_version: "4.12"
]


dependencies {
    swaggerCodegen "io.swagger:swagger-codegen-cli:2.4.2"             // Swagger Codegen V2
    swaggerCodegen "io.swagger.codegen.v3:swagger-codegen-cli:3.0.5"  // or Swagger Codegen V3
    swaggerCodegen "org.openapitools:openapi-generator-cli:3.3.4"     // or OpenAPI Generator

    implementation "io.swagger:swagger-annotations:${dependencyVersions.swagger_annotations_version}"
    implementation "org.glassfish.jersey.core:jersey-common:${dependencyVersions.jersey_version}"
    implementation "org.glassfish.jersey.core:jersey-client:${dependencyVersions.jersey_version}"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${dependencyVersions.jersey_version}"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:${dependencyVersions.jersey_version}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.4"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${dependencyVersions.jersey_version}"

    implementation "com.amazonaws:aws-lambda-java-core:1.2.1",
            "com.amazonaws:aws-lambda-java-events:3.9.0",
            "com.amazonaws:aws-java-sdk-dynamodb:1.12.14",
            "software.amazon.awssdk:sqs:2.16.88"

    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
    testImplementation "org.assertj:assertj-core:3.19.0"
    testImplementation "com.amazonaws:aws-lambda-java-tests:1.0.2"
    testImplementation "org.mockito:mockito-core:3.10.0"
    testImplementation "org.hamcrest:hamcrest:2.2"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.2"

}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

swaggerSources {
    sageone {
        inputFile = file("src/main/resources/swagger/sage-accounting-swagger.full.json")
        code {
            language = "java"
            configFile = file("src/main/resources/swagger/sageone-jersey-config.json")
            components = [
                "models",
                "apis",
                "supportingFiles"
            ]
        }
    }
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    dependsOn build
}

task awsPublish(type: Exec) {
    commandLine "aws", "--profile", "mcc", "s3", "cp", "build/distributions/accounts.zip", "s3://mcc-accounts-deployment"
    dependsOn buildZip
}

task terraformApply(type: Exec) {
    workingDir "terraform"
    commandLine "terraform", "apply", "-auto-approve"
    dependsOn build, buildZip, awsPublish
}


java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava.dependsOn swaggerSources.sageone.code
sourceSets.main.java.srcDir "${swaggerSources.sageone.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.sageone.code.outputDir}/src/main/resources"

test.finalizedBy jacocoTestReport
tasks["sonarqube"].dependsOn test
